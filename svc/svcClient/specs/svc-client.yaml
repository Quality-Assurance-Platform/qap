openapi: "3.0.0"

info:
  title: "Quality Sphere"
  version: "1.0.0"

servers:
  - url: http://0.0.0.0:6001/api

tags:
  - name: "status"
  - name: "tracker"
  - name: "project"
  - name: "sprint"
  - name: "issue"

paths:
  /status:  # GET status
    get:
      tags:
        - "status"
      description: Check Health Status
      operationId: api.apiHealth.health_check
      responses:
        200:
          description: Status is healthy


  /machine:
    get:
      tags:
        - "status"
      description: Get Machine Status
      operationId: api.apiHealth.machine_check
      responses:
        200:
          description: succeed to list all machines status


  /tracker:
    get:  # GET tracker
      tags:
        - "tracker"
      description: List All Trackers
      operationId: api.apiTracker.list_tracker
      responses:
        200:
          description: "succeed to list all trackers and return tracker info object
            [{
              'id': 'UUID',
              'name': 'String',
              'type': 'String',
              'info': {
                'host': 'String',
                'account': 'String',
                'password': 'String'
              },
              'status': 'String'
            }]
          "
    post: # POST tracker
      tags:
        - "tracker"
      description: Add Tracker
      operationId: api.apiTracker.add_tracker
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'MyTracker'
                type:
                  type: string
                  example: 'jira'
                info:
                  type: object
                  example: "{
                    host: 'http://bx.baoxian-sz.com',
                    account: 'baoxian-sz',
                    password: 'password'
                  }"
      responses:
        200:
          description: succeed to add tracker and return tracker ID

  /tracker/{tracker_id}:
    get:  # GET tracker ID
      tags:
        - "tracker"
      description: Get tracker information
      operationId: api.apiTracker.get_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to get tracker and return tracker info object
    put:  # PUT tracker ID
      tags:
        - "tracker"
      description: Update tracker information
      operationId: api.apiTracker.update_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'MyTracker'
                type:
                  type: string
                  example: 'jira'
                info:
                  type: object
                  example: "{
                      host: 'http://bx.baoxian-sz.com',
                      account: 'baoxian-sz',
                      password: 'password'
                  }"
                status:
                  type: string
                  example: 'disable'
      responses:
        200:
          description: succeed to update tracker and return tracker ID
    delete: # DELETE tracker ID
      tags:
        - "tracker"
      description: Delete connection information
      operationId: api.apiTracker.delete_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        204:
          description: succeed to delete tracker and return True

  /tracker/{tracker_id}/active:
    put:  # PUT tracker active
      tags:
        - "tracker"
      description: Active tracker
      operationId: api.apiTracker.active_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to active tracker and return True

  /tracker/{tracker_id}/disable:
    put:  # PUT tracker disable
      tags:
        - "tracker"
      description: Disable tracker status
      operationId: api.apiTracker.disable_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to disable tracker and return True

  /tracker/{tracker_id}/projects:
    get:  # GET projects from tracker
      tags:
        - "tracker"
      description: List project from tracker
      operationId: api.apiTracker.list_tracker_project
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: 'succeed to list project from tracker and return projects {key: value}'

  /tracker/{tracker_id}/issue_statuses:
    get:  # GET issue statuses from tracker
      tags:
        - "tracker"
      description: List issue statuses from tracker
      operationId: api.apiTracker.list_tracker_issue_status
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: 'succeed to list issue status from tracker and return statuses {key: value}'

  /tracker/{tracker_id}/issue_types:
    get:  # GET issue types from tracker
      tags:
        - "tracker"
      description: List issue type from tracker
      operationId: api.apiTracker.list_tracker_issue_type
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: 'succeed to list issue type from tracker and return types {key: value}'


  /project:
    get:  # GET project
      tags:
        - "project"
      description: List All Projects
      operationId: api.apiProject.list_project
      responses:
        200:
          description: succeed to list project and return project info object
    post:
      tags:
        - "project"
      description: Add Project
      operationId: api.apiProject.add_project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "MyProject"
                tracker:
                  type: object
                  example: "{
                    issue: {
                      id: 'e095081f-b145-4df7-affa-0412fce2ea88',
                      name: 'IssueTracker'
                    },
                    case: {
                      id: 'e095081f-b145-4df7-affa-0412fce2ea88',
                      name: 'CaseTracker'
                    }
                  }"
                project:
                  type: object
                  example: "{
                    issue: {
                      key: 'project1',
                      value: 'qsphere'
                    },
                    case: {
                      key: 'project',
                      value: 'qsphere'
                    },
                  }"
      responses:
        200:
          description: "succeed to add project and return project ID"

  # PROJECT ID
  /project/{project_id}:

    get:
      tags:
        - "project"
      description: Get Project
      operationId: api.apiProject.get_project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to get project

    put:
      tags:
        - "project"
      description: Update Project
      operationId: api.apiProject.update_project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                connection_id:
                  type: string
                  example: 'e095781f-b145-4df7-agfa-0412fci2ea88'
                project_name:
                  type: string
                  example: 'qap'
      responses:
        200:
          description: succeed to get project

    delete:
      tags:
        - "project"
      description: Delete Project
      operationId: api.apiProject.delete_project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        204:
          description: succeed to delete project

  # SPRINT
  /sprint:

    get:
      tags:
        - "sprint"
      description: List All Sprints
      operationId: api.apiSprint.list_sprint
      responses:
        200:
          description: succeed to list sprint

    post:
      tags:
        - "sprint"
      description: Create Sprint
      operationId: api.apiSprint.create_sprint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  example: 'e095081f-b145-4df7-affa-0412fce2ea88'
                sprint_name:
                  type: string
                  example: 'qap 1.0'
                product_version:
                  type: string
                  example: 'qap1.0'
                issue_types:
                  type: array
                  example: 'Improvement,Defect'
                features:
                  type: array
                  example: 'IssueManage,CaseManage'
                rcs:
                  type: array
                  example: 'RC1,RC2,RC3'
                issue_found_since:
                  type: array
                  example: 'RegressionImprove,QAMissed,NewFeature,Customer'
                issue_status:
                  type: object
                  properties:
                    fixing:
                      type: array
                      example: 'new,fixing'
                    fixed:
                      type: array
                      example: 'fixed'
                    verified:
                      type: array
                      example: 'verified'
                issue_categories:
                  type: array
                  example: 'Regression,Previous,NewFeature,Others'
      responses:
        200:
          description: succeed to create sprint

  # SPRINT ID
  /sprint/{sprint_id}:

    get:
      tags:
        - "sprint"
      description: Get Sprint
      operationId: api.apiSprint.get_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to get sprint

    delete:
      tags:
        - "sprint"
      description: Delete Sprint
      operationId: api.apiSprint.delete_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        204:
          description: succeed to delete sprint

    put:
      tags:
        - "sprint"
      description: Update Sprint
      operationId: api.apiSprint.update_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  example: 'e095081f-b145-4df7-affa-0412fce2ea88'
                sprint_name:
                  type: string
                  example: 'qap 1.0'
                product_version:
                  type: string
                  example: 'qap1.0'
                issue_types:
                  type: array
                  example: 'Improvement,Defect'
                features:
                  type: array
                  example: 'IssueManage,CaseManage'
                rcs:
                  type: array
                  example: 'RC1,RC2,RC3'
                issue_found_since:
                  type: array
                  example: 'RegressionImprove,QAMissed,NewFeature,Customer'
                issue_status:
                  type: object
                  properties:
                    fixing:
                      type: array
                      example: 'new,fixing'
                    fixed:
                      type: array
                      example: 'fixed'
                    verified:
                      type: array
                      example: 'verified'
                issue_categories:
                  type: array
                  example: 'Regression,Previous,NewFeature,Others'
      responses:
        200:
          description: succeed to update sprint

  # SPRINT ID ACTIVE
  /sprint/{sprint_id}/active:

    put:
      tags:
        - "sprint"
      description: Active / Disable Sprint
      operationId: api.apiSprint.active_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: string
                  example: 'enable/disable'
      responses:
        200:
          description: succeed to disable sprint

  # ISSUE SPRINT SYNC
  /issue/{sprint_id}/sync:

    get:
      tags:
        - "issue"
      description: Sync Sprint Issues
      operationId: api.apiIssue.sync_sprint_issue
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to sync data from issue manage server

  # ISSUE SYNC
  /issue/sync:

    get:
      tags:
        - "issue"
      description: Sync All Sprints Issues
      operationId: api.apiIssue.sync_issue
      responses:
        200:
          description: succeed to sync data from issue manage server

  # BUG STATUS
  /issue/status:

    get:
      tags:
        - "issue"
      description: Get All Active Sprints Bug Verification
      operationId: api.apiIssue.get_active_sprint_issue_status
      responses:
        200:
          description: succeed to get active sprint issue status