openapi: "3.0.0"

info:
  title: "Quality Sphere"
  version: "1.1.0"

servers:
  - url: http://0.0.0.0/api

tags:
  - name: "status"
  - name: "tracker"
  - name: "project"
  - name: "sprint"
  - name: "issue"

paths:
  /status:  # GET status
    get:
      tags:
        - "status"
      description: Check Health Status
      operationId: api.apiHealth.health_check
      responses:
        200:
          description: Status is healthy


  /machine:
    get:
      tags:
        - "status"
      description: Get Machine Status
      operationId: api.apiHealth.machine_check
      responses:
        200:
          description: succeed to list all machines status


  /tracker:
    get:  # GET tracker
      tags:
        - "tracker"
      description: List All Trackers
      operationId: api.apiTracker.list_tracker
      responses:
        200:
          description: "succeed to list all trackers and return tracker info object
            [{
              'id': 'UUID',
              'name': 'String',
              'type': 'String',
              'info': {
                'host': 'String',
                'account': 'String'
              },
              'status': 'String'
            }]
          "
    post: # POST tracker
      tags:
        - "tracker"
      description: Add Tracker
      operationId: api.apiTracker.add_tracker
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'MyTracker'
                type:
                  type: string
                  example: 'jira'
                info:
                  type: object
                  example: "{
                    host: 'https://office.baoxian-sz.com',
                    account: 'baoxian-sz'
                  }"
                secret:
                  type: string
                  example: 'password'
      responses:
        200:
          description: succeed to add tracker and return tracker ID

  /tracker/{tracker_id}:
    get:  # GET tracker ID
      tags:
        - "tracker"
      description: Get tracker information
      operationId: api.apiTracker.get_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to get tracker and return tracker info object
    put:  # PUT tracker ID
      tags:
        - "tracker"
      description: Update tracker information
      operationId: api.apiTracker.update_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'MyTracker'
                type:
                  type: string
                  example: 'jira'
                info:
                  type: object
                  example: "{
                      host: 'https://office.baoxian-sz.com',
                      account: 'baoxian-sz'
                  }"
                secret:
                  type: string
                  example: 'password'
                status:
                  type: string
                  example: 'disable'
      responses:
        200:
          description: succeed to update tracker and return tracker ID
    delete: # DELETE tracker ID
      tags:
        - "tracker"
      description: Delete connection information
      operationId: api.apiTracker.delete_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        204:
          description: succeed to delete tracker and return True

  /tracker/{tracker_id}/active:
    put:  # PUT tracker active
      tags:
        - "tracker"
      description: Active tracker
      operationId: api.apiTracker.active_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to active tracker and return True

  /tracker/{tracker_id}/disable:
    put:  # PUT tracker disable
      tags:
        - "tracker"
      description: Disable tracker status
      operationId: api.apiTracker.disable_tracker
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to disable tracker and return True

  /tracker/{tracker_id}/project:
    get:  # GET projects from tracker
      tags:
        - "tracker"
      description: List project from tracker
      operationId: api.apiTracker.list_tracker_project
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: 'succeed to list project from tracker and return projects {key: value}'

  /tracker/{tracker_id}/sprint:
    get:
      tags:
        - "tracker"
      description: List sprints from tracker
      operationId: api.apiTracker.list_tracker_sprint
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: 'succeed to list sprint from tracker and return sprints {key: value}'

  /tracker/{tracker_id}/issue_field:
    get:
      tags:
        - "tracker"
      description: List issue fields from tracker
      operationId: api.apiTracker.list_tracker_issue_field
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: 'succeed to list issue field from tracker and return issue fields {key: value}'

  /tracker/{tracker_id}/issue_field/{issue_field_id}:
    get:
      tags:
        - "tracker"
      description: List issue field values from tracker
      operationId: api.apiTracker.list_tracker_issue_field_value
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
        - name: issue_field_id
          in: path
          required: true
          schema:
            type: string
            example: 'label'
        - name: project_id
          in: query
          required: false
          schema:
            type: string
            example: 'QS'
      responses:
        200:
          description: 'succeed to list issue field value from tracker and return issue field values {key: value}'

  /tracker/{tracker_id}/issue_statuses:
    get:  # GET issue statuses from tracker
      tags:
        - "tracker"
      description: "[replaced by /tracker/{tracker_id}/issue_field/{issue_field_is}] List issue statuses from tracker"
      operationId: api.apiTracker.list_tracker_issue_status
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: 'succeed to list issue status from tracker and return statuses {key: value}'

  /tracker/{tracker_id}/issue_types:
    get:  # GET issue types from tracker
      tags:
        - "tracker"
      description: "[replaced by /tracker/{tracker_id}/issue_field/{issue_field_is}] List issue type from tracker"
      operationId: api.apiTracker.list_tracker_issue_type
      parameters:
        - name: tracker_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: 'succeed to list issue type from tracker and return types {key: value}'


  /project:
    get:  # GET project
      tags:
        - "project"
      description: List All Projects
      operationId: api.apiProject.list_project
      responses:
        200:
          description: succeed to list project and return project info object
    post:  # POST project
      tags:
        - "project"
      description: Add Project
      operationId: api.apiProject.add_project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "MyProject"
                tracker:
                  type: object
                  example: "{
                    issue: {
                      id: 'e095081f-b145-4df7-affa-0412fce2ea88',
                      name: 'IssueTracker'
                    },
                    case: {
                      id: 'e095081f-b145-4df7-affa-0412fce2ea88',
                      name: 'CaseTracker'
                    }
                  }"
                project:
                  type: object
                  example: "{
                    issue: {
                      key: 'project1',
                      value: 'qsphere'
                    },
                    case: {
                      key: 'project',
                      value: 'qsphere'
                    },
                  }"
      responses:
        200:
          description: "succeed to add project and return project ID"

  /project/{project_id}:
    get:  # GET project ID
      tags:
        - "project"
      description: Get Project
      operationId: api.apiProject.get_project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to get project
    put:  # PUT project ID
      tags:
        - "project"
      description: Update Project
      operationId: api.apiProject.update_project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                connection_id:
                  type: string
                  example: 'e095781f-b145-4df7-agfa-0412fci2ea88'
                project_name:
                  type: string
                  example: 'qsphere'
      responses:
        200:
          description: succeed to get project
    delete:  # DELETE project ID
      tags:
        - "project"
      description: Delete Project
      operationId: api.apiProject.delete_project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        204:
          description: succeed to delete project

  /project/{project_id}/disable:
    put:  # PUT project status as disable
      tags:
        - "project"
      description: Disable Project
      operationId: api.apiProject.disable_project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to disable project

  /project/{project_id}/active:
    put:  # PUT project status as active
      tags:
        - "project"
      description: Active Project
      operationId: api.apiProject.active_project
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to active project


  /sprint:
    get:  # GET sprint
      tags:
        - "sprint"
      description: List All Sprint
      operationId: api.apiSprint.list_sprint
      responses:
        200:
          description: succeed to list sprint and return sprint objects
    post:  # POST sprint
      tags:
        - "sprint"
      description: Create Sprint
      operationId: api.apiSprint.add_sprint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Qsphere 1.0'
                project_id:
                  type: string
                  example: 'e095081f-b145-4df7-affa-0412fce2ea88'
                version:
                  type: string
                  example: 'qsphere1.0'
                requirements:
                  type: array
                  example: '[supportJIRA,caseProcess]'
                rcs:
                  type: array
                  example: '[RC1,RC2,RC3]'
                issue:
                  type: object
                  example: "{
                    types: [Improvement,Defect],
                    found_since: [RegressionImprove,QAMissed,NewFeature,Customer],
                    statuses: {
                      fixing: [new,fixing],
                      fixed: [fixed],
                      verified: [verified]
                    },
                    categories: [NewFeature,Previous,Regression,Others]
                  }"
                case:
                  type: object
                  example: "{
                    statuses: [],
                  }"
      responses:
        200:
          description: succeed to add sprint and return sprint ID

  /sprint/{sprint_id}:
    get:  # GET sprint ID
      tags:
        - "sprint"
      description: Get Sprint
      operationId: api.apiSprint.get_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to get sprint and return sprint info object
    delete:  # DELETE sprint ID
      tags:
        - "sprint"
      description: Delete Sprint
      operationId: api.apiSprint.delete_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        204:
          description: succeed to delete sprint
    put:  # PUT sprint ID
      tags:
        - "sprint"
      description: Update Sprint
      operationId: api.apiSprint.update_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Qsphere 1.0'
                project_id:
                  type: string
                  example: 'e095081f-b145-4df7-affa-0412fce2ea88'
                version:
                  type: string
                  example: 'qsphere1.0'
                requirements:
                  type: array
                  example: '[supportJIRA,caseProcess]'
                rcs:
                  type: array
                  example: '[RC1,RC2,RC3]'
                issue:
                  type: object
                  example: "{
                    types: [Improvement,Defect],
                    found_since: [RegressionImprove,QAMissed,NewFeature,Customer],
                    statuses: {
                      fixing: [new,fixing],
                      fixed: [fixed],
                      verified: [verified]
                    },
                    categories: [NewFeature,Previous,Regression,Others]
                  }"
                case:
                  type: object
                  example: "{
                    statuses: [],
                  }"
      responses:
        200:
          description: succeed to update sprint and return sprint ID

  /sprint/{sprint_id}/active:
    put:  # PUT sprint as active
      tags:
        - "sprint"
      description: Active Sprint
      operationId: api.apiSprint.active_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to active sprint

  /sprint/{sprint_id}/disable:
    put:  # PUT sprint as disable
      tags:
        - "sprint"
      description: Active Sprint
      operationId: api.apiSprint.disable_sprint
      parameters:
        - name: sprint_id
          in: path
          required: true
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to disable sprint


  /issue/sync:
    get:  # GET sync all sprints issue
      tags:
        - "issue"
      description: Sync All Sprints Issues
      operationId: api.apiIssue.sync_issue
      parameters:
        - name: sprint_id
          in: query
          required: false
          schema:
            type: string
            example: 'e095081f-b145-4df7-affa-0412fce2ea88'
      responses:
        200:
          description: succeed to sync data from issue tracker server

  /issue/status:
    get:  # GET issue status
      tags:
        - "issue"
      description: Get All Active Sprints Bug Verification
      operationId: api.apiIssue.get_active_sprint_issue_status
      responses:
        200:
          description: succeed to get active sprint issue status